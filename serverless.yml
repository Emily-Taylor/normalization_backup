service: srcbot-normalization-service

custom:
  #stage: ${opt:stage, self:provider.stage} # shortcut for current stage
  serverless-offline:
    #resourceRoutes: true
    debug: true
    port: 4000

#  serverless-offline-sns:
#    port: 4002 # a free port for the sns server to run on
#    debug: true

provider:
  name: aws
  runtime: python3.6
  stage: ${opt:stage, 'dev'}
  region: eu-central-1
  environment:
  #  STAGE: ${self:custom.stage}
    APP_AWS_REGION: eu-central-1
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
        - "sqs:GetQueueUrl"
        - "sqs:ListQueues"
        - "sns:Publish"

      Resource: 
        - arn:aws:sqs:eu-central-1:202439666482:missing-mapping
        - arn:aws:sns:eu-central-1:202439666482:norm-new-item

package:
  exclude:
    - node_modules/**
    - data/**
    - data-full/**
    - headers-data/**
    - __pycache__/**
    - .git/**
    - .circleci/**
    - .mypy_cache/**
    - .ipynb_checkpoints/**
    - .gitignore
    - .vscode/**
    - dev/**
functions:
  ping:
    handler: handler.ping
    events:
      - http:
          path: ping
          method: get
  norm_sns:
    handler: handler.norm_handler_sns
    events:
      - sns:
            arn: arn:aws:sns:eu-central-1:202439666482:crawler-new-item
  norm_http:
    handler: handler.norm_handler_http
    events:
      - http:
          path: '/normalize'
          method: post
          response:
            headers:
              Content-Type: "'application/json'"
            template: $input.path('$')

plugins:
  - serverless-python-requirements
  - serverless-offline
#  - serverless-offline-sns