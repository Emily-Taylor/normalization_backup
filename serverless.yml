service: norm-service

custom:
  stage: ${opt:stage, self:provider.stage} # shortcut for current stage
  serverless-offline:
    resourceRoutes: true
    debug: true
    port: 4000
  names:
  # this is where we define the incoming kinesis queue. we cannot let sls create it.
    kinesis: crawler-data-raw-${self:provider.stage}
resources:
  Resources:
    KinesisStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: ${self:custom.names.kinesis}
        ShardCount: 1

provider:
  name: aws
  runtime: python3.6
  stage: ${opt:stage, 'dev'}
  region: eu-central-1

  memorySize: 256 # optional, in MB, default is 1024
  timeout: 15 # optional, in seconds, default is 6
  environment:
  #  STAGE: ${self:custom.stage}
    APP_AWS_REGION: eu-central-1
    REGION_NAME: eu-central-1
    MISSING_QUEUE_URL: https://sqs.eu-central-1.amazonaws.com/202439666482/missing-mapping
    MISSING_QUEUE_NAME: missing-mapping
    OUTGOING_KINESIS_TOPIC: norm-new-item-${self:provider.stage}
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "sqs:SendMessage"
        - "sqs:GetQueueUrl"
        - "sqs:ListQueues"
        - "sns:Publish"

      Resource:
        - arn:aws:sqs:eu-central-1:202439666482:missing-mapping
        - arn:aws:sns:eu-central-1:202439666482:norm-new-item-dev #${self:provider.stage}
        - arn:aws:sns:eu-central-1:202439666482:norm-new-item-production #${self:provider.stage}
    - Effect: "Allow"
      Action:
        - "kinesis:PutRecords"
        - "kinesis:PutRecord"
      Resource:
        - "arn:aws:kinesis:eu-central-1:202439666482:*"

package:
  individually: true
  exclude:
    - node_modules/**
    - data/**
    - data-full/**
    - headers-data/**
    - __pycache__/**
    - .git/**
    - .circleci/**
    - .mypy_cache/**
    - .ipynb_checkpoints/**
    - .gitignore
    - .vscode/**
    - dev/**
functions:
  ping:
    handler: handler.ping
    events:
      - http:
          path: ping
          method: get
  norm_http:
    handler: handler.norm_handler_http
    events:
      - http:
          path: '/normalize'
          method: post
          response:
            headers:
              Content-Type: "'application/json'"
            template: $input.path('$')
  norm_kinesis:
    handler: handler.norm_handler_kinesis
    events:
      - stream:
          type: kinesis
          arn: { Fn::GetAtt: [ KinesisStream, Arn ] }
          batchSize: 100
          startingPosition: TRIM_HORIZON

plugins:
  - serverless-python-requirements
  - serverless-offline
